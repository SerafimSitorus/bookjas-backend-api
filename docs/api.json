{
  "openapi": "3.0.3",
  "info": {
    "title": "Kelompok 3 BookJas API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register New User",
        "requestBody": {
          "content": {
            "application/json": {
              "examples": {
                "luthfi": {
                  "description": "Register user Luthfi",
                  "value": {
                    "nama": "Muhammad Luthfi",
                    "email": "zeeroxc@gmail.com",
                    "password": "luthfiganteng123",
                    "password_confirmation": "luthfiganteng123",
                    "status": "User"
                  }
                },
                "rifqi": {
                  "description": "Register user Rifqi",
                  "value": {
                    "nama": "Rifqi Jabrah Rhae",
                    "email": "jabrah@gmail.com",
                    "password": "rhaejabrah",
                    "password_confirmation": "rhaejabrah",
                    "status": "User"
                  }
                }
              },
              "schema": {
                "type": "object",
                "required": [
                  "nama",
                  "email",
                  "password"
                ],
                "properties": {
                  "nama": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "password_confirmation": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "User",
                      "Admin"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "examples": {
                  "validationerror": {
                    "description": "Validation error",
                    "value": {
                      "errors": {
                        "nama": [
                          "nama must not be blank"
                        ],
                        "email": [
                          "email must not be blank",
                          "email min 6 characters",
                          "email must be unique",
                          "email must be lowercase",
                          "email max 255 characters"
                        ],
                        "password": [
                          "password must not be blank",
                          "password min 8 characters",
                          "password max 255 characters"
                        ],
                        "password_confirmation": [
                          "password confirmation must not be blank",
                          "password confirmation min 8 characters",
                          "password confirmation max 255 characters"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Success Register User",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "description": "Success register user",
                    "value": {
                      "data": {
                        "uuid": "123e4567-e89b-12d3-a456-426614174000",
                        "name": "Muhammad Luthfi",
                        "email": "zeeroxc@gmail.com",
                        "status": "User"
                      }
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "User",
                            "Admin"
                          ]
                        }
                      }
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Login User",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success Login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "User",
                            "Admin"
                          ]
                        }
                      }
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Logout Current User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success logout user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "boolean"
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Invalid or missing token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get Current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Current User",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "foto_profil": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "User",
                            "Admin"
                          ]
                        }
                      }
                    },
                    "errors": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Invalid or missing token"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update current user",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Current User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "nama": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "foto_profil": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "uuid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "password": {
                          "type": "string"
                        },
                        "foto_profil": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "examples": {
                  "validationerror": {
                    "description": "Validation error",
                    "value": {
                      "errors": {
                        "nama": [
                          "nama must not be blank"
                        ],
                        "email": [
                          "email must not be blank",
                          "email min 6 characters",
                          "email must be unique",
                          "email must be lowercase",
                          "email max 255 characters"
                        ],
                        "foto_profil": [
                          "foto profil must in jpg, jpeg, png"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Invalid or missing token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/update_password": {
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update Current User Password",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bearer token for user authentication"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "current_password": {
                    "type": "string",
                    "example": "old_password123"
                  },
                  "new_password": {
                    "type": "string",
                    "example": "new_secure_password456"
                  },
                  "confirm_password": {
                    "type": "string",
                    "example": "new_secure_password456"
                  }
                },
                "required": [
                  "current_password",
                  "new_password",
                  "confirm_password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "current_password": {
                          "type": "string",
                          "example": "old_password123"
                        },
                        "new_password": {
                          "type": "string",
                          "example": "new_secure_password456"
                        },
                        "confirm_password": {
                          "type": "string",
                          "example": "new_secure_password456"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Password Error",
            "content": {
              "application/json": {
                "examples": {
                  "validationerror": {
                    "description": "Validation Password error",
                    "value": {
                      "errors": {
                        "current_password": [
                          "current password must not be blank",
                          "current password min 8 characters",
                          "current password max 255 characters",
                          "current password does not match the existing password"
                        ],
                        "new_password": [
                          "new password must not be blank",
                          "new password min 8 characters",
                          "new password max 255 characters"
                        ],
                        "password_confirmation": [
                          "password confirmation must not be blank",
                          "password confirmation min 8 characters",
                          "password confirmation max 255 characters",
                          "password confirmation does not match the new password"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "string",
                      "example": "Invalid or missing token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/books": {
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Create New Book",
        "description": "Create New Book",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          }
        ],
        "requestBody": {
          "description": "Create New Book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/buku"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create new book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_buku"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Search Books",
        "description": "Search Books",
        "parameters": [
          {
            "name": "judul",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "penulis",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isbn",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success search books",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_buku_search"
                }
              }
            }
          }
        }
      }
    },
    "/books/{isbn}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get Detail Book",
        "description": "Get Detail Book",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get detail book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_buku"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Book"
        ],
        "summary": "Update Book",
        "description": "Update Book",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Book",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/buku"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_buku"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Delete Book",
        "description": "Delete Book",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_delete"
                }
              }
            }
          }
        }
      }
    },
    "/peminjaman": {
      "post": {
        "tags": [
          "Peminjaman"
        ],
        "summary": "Create Peminjaman",
        "description": "Create Peminjaman",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          }
        ],
        "requestBody": {
          "description": "Create Peminjaman",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/peminjaman"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create peminjaman",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_peminjaman"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Peminjaman"
        ],
        "summary": "Search Peminjaman",
        "description": "Search Peminjaman",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "judul",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peminjam",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success search peminjaman",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_peminjaman_get"
                }
              }
            }
          }
        }
      }
    },
    "/peminjaman/user/{idUser}": {
      "get": {
        "tags": [
          "Peminjaman"
        ],
        "summary": "Get Peminjaman User",
        "description": "Get Peminjaman User",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get peminjaman user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_peminjaman_get"
                }
              }
            }
          }
        }
      }
    },
    "/peminjaman/user/{idUser}/buku/{isbn}": {
      "put": {
        "tags": [
          "Peminjaman"
        ],
        "summary": "Kembalikan Peminjaman",
        "description": "Kembalikan Peminjaman",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "idUser",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isbn",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create Peminjaman",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/peminjaman"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success create peminjaman",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_pengembalian"
                }
              }
            }
          }
        }
      }
    },
    "/kategori": {
      "post": {
        "tags": [
          "Kategori"
        ],
        "summary": "Create New Kategori",
        "description": "Create New Kategori",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          }
        ],
        "requestBody": {
          "description": "Create New Kategori",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kategori"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create new kategori",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_kategori"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Kategori"
        ],
        "summary": "Get All Kategori",
        "description": "Get All Kategori",
        "responses": {
          "200": {
            "description": "Success get all kategori",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_kategori_get"
                }
              }
            }
          }
        }
      }
    },
    "/kategori/{kategori}": {
      "get": {
        "tags": [
          "Kategori"
        ],
        "summary": "Get Detail Kategori",
        "description": "Get Detail Kategori",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "kategori",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success get detail kategori",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_kategori"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Kategori"
        ],
        "summary": "Update Kategori",
        "description": "Update Kategori",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "kategori",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update Kategori",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/kategori"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success update kategori",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_kategori"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Kategori"
        ],
        "summary": "Delete Kategori",
        "description": "Delete Kategori",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "token for user authentication"
          },
          {
            "name": "kategori",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success delete kategori",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/response_delete"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "buku": {
        "type": "object",
        "properties": {
          "isbn": {
            "type": "string"
          },
          "sampul": {
            "type": "string"
          },
          "judul": {
            "type": "string"
          },
          "kategori": {
            "type": "string"
          },
          "penulis": {
            "type": "string"
          },
          "penerbit": {
            "type": "string"
          },
          "deskripsi": {
            "type": "string"
          },
          "tahun_terbit": {
            "type": "string"
          },
          "jumlah_tersedia": {
            "type": "number"
          }
        }
      },
      "response_buku": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "isbn": {
                "type": "string"
              },
              "sampul": {
                "type": "string"
              },
              "judul": {
                "type": "string"
              },
              "kategori": {
                "type": "string"
              },
              "penulis": {
                "type": "string"
              },
              "penerbit": {
                "type": "string"
              },
              "deskripsi": {
                "type": "string"
              },
              "tahun_terbit": {
                "type": "string"
              },
              "jumlah_tersedia": {
                "type": "number"
              }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "response_buku_search": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "isbn": {
                  "type": "string"
                },
                "sampul": {
                  "type": "string"
                },
                "judul": {
                  "type": "string"
                },
                "kategori": {
                  "type": "string"
                },
                "penulis": {
                  "type": "string"
                },
                "penerbit": {
                  "type": "string"
                },
                "deskripsi": {
                  "type": "string"
                },
                "tahun_terbit": {
                  "type": "string"
                },
                "jumlah_tersedia": {
                  "type": "number"
                }
              }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "peminjaman": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "buku_id": {
            "type": "string"
          },
          "tanggal": {
            "type": "string"
          }
        }
      },
      "response_peminjaman": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "user_id": {
                  "type": "string"
                },
                "isbn": {
                  "type": "string"
                },
                "sampul": {
                  "type": "string"
                },
                "judul": {
                  "type": "string"
                },
                "penulis": {
                  "type": "string"
                },
                "peminjam": {
                  "type": "string"
                },
                "tanggal_peminjaman": {
                  "type": "string"
                }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "response_pengembalian": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "user_id": {
                  "type": "string"
                },
                "isbn": {
                  "type": "string"
                },
                "sampul": {
                  "type": "string"
                },
                "judul": {
                  "type": "string"
                },
                "penulis": {
                  "type": "string"
                },
                "peminjam": {
                  "type": "string"
                },
                "tanggal_peminjaman": {
                  "type": "string"
                },
                "tanggal_pengembalian": {
                  "type": "string"
                }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "response_peminjaman_get": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string"
                },
                "isbn": {
                  "type": "string"
                },
                "sampul": {
                  "type": "string"
                },
                "judul": {
                  "type": "string"
                },
                "penulis": {
                  "type": "string"
                },
                "peminjam": {
                  "type": "string"
                },
                "tanggal_peminjaman": {
                  "type": "string"
                }
              }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "response_delete": {
        "type": "object",
        "properties": {
          "data": {
            "type": "boolean"
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "kategori": {
        "type": "object",
        "properties": {
          "kategori": {
            "type": "string"
          }
        }
      },
      "response_kategori": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "kategori": {
                "type": "string"
              }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      },
      "response_kategori_get": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "kategori": {
                  "type": "string"
                }
              }
            }
          },
          "errors": {
            "type": "object"
          }
        }
      }
    }
  }
}